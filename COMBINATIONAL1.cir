** COMBINATIONAL1 **
* 
* NI Multisim to SPICE Netlist Export
* Generated by: gokul
* Thu, Jun 20, 2024 11:44:36 
*

*## Multisim Component U5 ##*
aU5  [3 4] 10 OR2__TIL__1




*## Multisim Component U3 ##*
aU3  [3 4] 1 AND2__TIL__1




*## Multisim Component VCC ##*
VCCVCC  VCC 0 dc 5

*## Multisim Component U6 ##*
aU6  [1 10] 11 AND2__TIL__1




*## Multisim Component S4 ##*
* !!!BEGIN-INTERACT
*  2.0 constant high
*  0.0 constant low
*  2   constant max_states
*  low VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*
*  : INIT_IMOUSE_OPTION
*    1 0 4 IMOUSE_SET
*  ;
*
*  : GET_IMOUSE_SUBCOMPS ( -- [iIdxN ... iIdx1] )
*    1
*  ;
*
*  : ON_SUBCOMP_IMOUSE_EVENT locals| eEventType nOptions iSubCompIdx |
*    eEventType 2 = if
*      -1
*      -1 KEYBOARD_INPUT
*    else
*      0
*    endif
*  ;
*
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*   INIT_IMOUSE_OPTION
*
*  :BEGIN_ANALYSIS
*    UPDATE_SETTINGS
*  ; 
*
* !!!END-INTERACT

xS4 S4_OPEN_1 VCC 9  SwitchS4 Params: Ron=0.0001 Roff=100000000

.subckt SwitchS4 1 2 3 Params: Ron=1e-8 Roff=1e30
V2 5 0 DC 0
R1 5 6 20
V1 6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON={Ron} ROFF={Roff})
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON={Roff} ROFF={Ron})
.ENDS

*## Multisim Component S3 ##*
* !!!BEGIN-INTERACT
*  2.0 constant high
*  0.0 constant low
*  2   constant max_states
*  low VARIABLE volt
*
*  :MAP_KEYBOARD_INPUT ++++K1 1 ++++k1 -1 ;
*
*  : UPDATE_SETTINGS
*     *animation_state max_states  low  high  STATE  volt 
*     GRADUAL_CHANGE_AT_RUN  
*  ;
*
*  :KEYBOARD_INPUT locals| shift_state |
*     shift_state *animation_state max_states NEXT_STATE_WRAP
*                                             ==>_*animation_state
*     UPDATE_SETTINGS
*  ;
*
*  :GRADUAL_CHANGE_AT_RUN locals| ref value |
*     value  SET_INSTANCE Vsource ::V  V2 dc
*  ;
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
*
*  : INIT_IMOUSE_OPTION
*    1 0 4 IMOUSE_SET
*  ;
*
*  : GET_IMOUSE_SUBCOMPS ( -- [iIdxN ... iIdx1] )
*    1
*  ;
*
*  : ON_SUBCOMP_IMOUSE_EVENT locals| eEventType nOptions iSubCompIdx |
*    eEventType 2 = if
*      -1
*      -1 KEYBOARD_INPUT
*    else
*      0
*    endif
*  ;
*
*  ( Initialize the settings )
*   UPDATE_SETTINGS
*   INIT_IMOUSE_OPTION
*
*  :BEGIN_ANALYSIS
*    UPDATE_SETTINGS
*  ; 
*
* !!!END-INTERACT

xS3 S3_OPEN_1 VCC 6  SwitchS3 Params: Ron=0.0001 Roff=100000000

.subckt SwitchS3 1 2 3 Params: Ron=1e-8 Roff=1e30
V2 5 0 DC 0
R1 5 6 20
V1 6 0 DC 0
W0 2 1 V1 NC_contact 
W1 2 3 V1 NO_contact 
.MODEL NO_contact csw (IT=0.05 IH=0.025 RON={Ron} ROFF={Roff})
.MODEL NC_contact csw (IT=0.05 IH=0.025 RON={Roff} ROFF={Ron})
.ENDS

*## Multisim Component X2 ##*
* !!!BEGIN-INTERACT
*  : v_level            ++++f2 ;
*  0.0       VARIABLE   r1Volt
*  0.0       VARIABLE   r1Cur
*
*  :UPDATE_SETTINGS
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*       0.0 ==>_*r1Volt
*       0.0 ==>_*r1Cur
*  ;   
*
*  :OUT_DATA
*   GET_INSTANCE Resistor ::R r1 i  ==>_*r1Cur
*   1.0e12 *r1Cur f.*  ==>_*r1Volt
*   v_level *r1Volt  f.<=   if
*       1 7 0 SET_SUBCOMP_PRP
*       1 8 0 SET_SUBCOMP_PRP
*       1 9 0 SET_SUBCOMP_PRP
*       1 10 0 SET_SUBCOMP_PRP
*       1 11 0 SET_SUBCOMP_PRP
*       1 12 0 SET_SUBCOMP_PRP
*       1 13 0 SET_SUBCOMP_PRP
*   else
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*   endif
*  ;
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
* !!!END-INTERACT
xX2 8 ProbeX2
.subckt ProbeX2 1  
R1 1 0 1e12
.ends

*## Multisim Component X1 ##*
* !!!BEGIN-INTERACT
*  : v_level            ++++f2 ;
*  0.0       VARIABLE   r1Volt
*  0.0       VARIABLE   r1Cur
*
*  :UPDATE_SETTINGS
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*       0.0 ==>_*r1Volt
*       0.0 ==>_*r1Cur
*  ;   
*
*  :OUT_DATA
*   GET_INSTANCE Resistor ::R r1 i  ==>_*r1Cur
*   1.0e12 *r1Cur f.*  ==>_*r1Volt
*   v_level *r1Volt  f.<=   if
*       1 7 0 SET_SUBCOMP_PRP
*       1 8 0 SET_SUBCOMP_PRP
*       1 9 0 SET_SUBCOMP_PRP
*       1 10 0 SET_SUBCOMP_PRP
*       1 11 0 SET_SUBCOMP_PRP
*       1 12 0 SET_SUBCOMP_PRP
*       1 13 0 SET_SUBCOMP_PRP
*   else
*       0 7 0 SET_SUBCOMP_PRP
*       0 8 0 SET_SUBCOMP_PRP
*       0 9 0 SET_SUBCOMP_PRP
*       0 10 0 SET_SUBCOMP_PRP
*       0 11 0 SET_SUBCOMP_PRP
*       0 12 0 SET_SUBCOMP_PRP
*       0 13 0 SET_SUBCOMP_PRP
*   endif
*  ;
*
*  :BEGIN_PLOT
*     UPDATE_SETTINGS
*  ;
* !!!END-INTERACT
xX1 7 ProbeX1
.subckt ProbeX1 1  
R1 1 0 1e12
.ends

*## Multisim Component U4 ##*
aU4 11 2 NOT__TIL__1



*## Multisim Component U2 ##*
aU2 2
+      dU2.CLK
+      U2_OPEN_SET
+      U2_OPEN_RESET
+     dU2.Q
+      dU2.notQ D_FF__TIL__1


xU2.Q dU2.Q 7 TIL_DRV__NON__1


xU2.notQ dU2.notQ 8 TIL_DRV__NON__1



xU2.CLK 9 dU2.CLK TIL_RCV__NON__1



*## Multisim Component U1 ##*
aU1 dU1.D
+      dU1.CLK
+      U1_OPEN_SET
+      U1_OPEN_RESET
+     3
+      4 D_FF__TIL__1

xU1.D 6 dU1.D TIL_RCV__NON__1





xU1.CLK 9 dU1.CLK TIL_RCV__NON__1




.MODEL OR2__TIL__1 d_or ( rise_delay = 1n fall_delay = 1n)

.MODEL NOT__TIL__1 d_inverter (rise_delay = 1n fall_delay = 1n)

.MODEL AND2__TIL__1 d_and ( rise_delay = 1n fall_delay = 1n)

.MODEL D_FF__TIL__1 d_dff (clk_delay = 1n set_delay = 1n reset_delay= 1n
+                  ic = 0 rise_delay = 1n fall_delay = 1n)

.SUBCKT TIL_DRV__NON__1 1 2
* TIL Driver Model  1 = D/A input, 2 = out
 aDACin1 [1] [2] aDAC
.MODEL aDAC dac_bridge (out_low= 0 out_high = 5 out_undef = 2.5)
.ENDS

.SUBCKT TIL_RCV__NON__1 1 2
* TIL Receiver Model  1 = input, 2 = A/D out
 aADCin1 [1] [2] ADC
.MODEL ADC adc_bridge (in_low= 2.5 in_high = 2.5)
.ENDS


